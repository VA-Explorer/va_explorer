stages:
#  - lint
  - test

variables:
  POSTGRES_USER: 'va_explorer'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_va_explorer'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay


#flake8:
#  stage: lint
#  image: python:3.7-alpine
#  before_script:
#    - pip install -q flake8
#  script:
#    - flake8 ./va_explorer

pytest:
  stage: test
  image: docker:stable
  tags:
    - docker
  services:
    - docker:stable-dind
  before_script:
    - docker info
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - pip install docker-compose
    - docker-compose -f local.yml build
    # Ensure celerybeat does not crash due to non-existent tables
    - docker-compose -f local.yml run --rm django python manage.py migrate
    - docker-compose -f local.yml up -d
  script:
    - docker-compose -f local.yml run django pytest

